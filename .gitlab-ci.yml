stages:
    - publish
    - deploy

variables:
    TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

publish:
    image: docker:latest
    stage: publish
    services:
        - docker:dind
    script:
        - docker login -u $SSH_USER -p $PAT $CI_REGISTRY
        - docker build -t $TAG_COMMIT -t $TAG_LATEST .
        - docker push $TAG_COMMIT
        - docker push $TAG_LATEST

deploy:
    image: alpine:latest
    stage: deploy
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client wget gnupg -y )'
        - wget -qO- https://get.docker.com/gpg | apt-key add -
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - touch ~/.ssh/config
        - touch ~/.ssh/known_hosts
        - chmod -R 400 ~/.ssh
        - ssh-keyscan <ip> >> ~/.ssh/known_hosts
        - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    script:
        # - chmod og= $SSH_PRIVATE_KEY
        # - apk update && apk add openssh-client
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker login -u $SSH_USER -p $PAT $CI_REGISTRY"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker pull $TAG_COMMIT"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker container rm -f portfolio || true"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker run -d -p 9000:3000 --name portfolio $TAG_COMMIT"
    environment:
        name: production
        url: http://$SSH_HOST
    only:
        - main
